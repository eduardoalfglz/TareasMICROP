
as12, an absolute assembler for Motorola MCU's, version 1.2h

                        ;#################################################################
                        ;
                        ;
                        ;               Tarea 3
                        ;               Eduardo Alfaro Gonzalez
                        ;               B50203
                        ;               Calculo de Raices cuadradas
                        ;               Ultima vez modificado 1/10/19
                        ;
                        ;
                        ;#################################################################
                        
                        
                        
                        
                        ;#################################################################
                        ;               Definicion de estructuras de datos
ee88                    PRINTF:         equ $EE88
ee84                    GETCHAR:        equ $EE84
ee86                    PUTCHAR:        equ $EE86
000d                    CR:             equ $0D
000a                    LF:             equ $0A
0000                    FIN:            equ $0
                        
1000                                    org $1000
1000 0a                 LONG:           db 10
1001                    CANT:           ds 1
1002                    CONT:           ds 1
1003                    CurENTERO:      ds 2
1005 49 6e 67 72 65 73  MESS1:          fcc "Ingrese el valor de cant (Entre 1 y 99)"
     65 20 65 6c 20 76
     61 6c 6f 72 20 64
     65 20 63 61 6e 74
     20 28 45 6e 74 72
     65 20 31 20 79 20
     39 39 29
102c 0d 0a 00                           db CR,LF,FIN
102f 43 61 6e 74 69 64  MESS2:          fcc "Cantidad de valores encontrados %i"
     61 64 20 64 65 20
     76 61 6c 6f 72 65
     73 20 65 6e 63 6f
     6e 74 72 61 64 6f
     73 20 25 69
1051 0d 0a 00                           db CR,LF,FIN
1054 45 6e 74 65 72 6f  MESS3:          fcc "Entero: "
     3a 20
105c 00                                 db FIN
105d 0d 0a              MESS4:          db CR,LF
105f 4c 61 20 63 61 6e  		fcc "La cantidad ingresada es: %i"
     74 69 64 61 64 20
     69 6e 67 72 65 73
     61 64 61 20 65 73
     3a 20 25 69
107b 0d 0a 00                           db CR,LF,FIN
                                        
1020                                    org $1020
1020 04 09 12 04 1b 3f  DATOS:          db 4,9,18,4,27,63,12,32,36,15
     0c 20 24 0f
1040                                    org $1040
1040 01 04 09 10 19 24  CUAD:           db 1,4,9,16,25,36,49,64,81,100,121,144,169,196,225
     31 40 51 64 79 90
     a9 c4 e1
1100                                    org $1100
1100                    ENTERO:         ds 100
                        
                        
                        ;#################################################################
                        ;               Inicio de programa principal
2000                                    org $2000
2000 cf 3b ff                           lds #$3BFF              ;Definicion del Stack
2003 cc 10 05                           ldd #MESS1              ;Imprimir el primer mensaje
2006 ce 00 00                           ldx #0
2009 15 e3 ee 88                        jsr [PRINTF,X]
200d 16 20 12                           jsr Leer_Cant
2010 20 fe                              bra *
                                        
                        
                        
                        
                        
                        
                        ;#################################################################
                        ;               Subrutina Leer_Cant
2012 86 01              Leer_Cant:      ldaa #1
2014 36                                 psha
2015 43                                 deca
2016 7a 10 01                           staa CANT
2019 7a 10 02                           staa CONT
201c ce 00 00                           ldx #$0000
201f 15 e3 ee 84        Loop`           jsr [GETCHAR,X]
2023 86 30                              ldaa #48
2025 18 17              		cba
2027 2e f6                              bgt Loop`              ;El numero es menor que 0
2029 86 39                              ldaa #57
202b 18 17                              cba
202d 2d f0              		blt Loop`              ;El numero es mayor que 9
202f 15 e3 ee 86                        jsr [PUTCHAR,X]
2033 c0 30                              subb #48
2035 32                                 pula
2036 04 20 09                           dbne A,SaveRES`           ;si no es 1 hace branch
2039 86 0a                              ldaa #10
203b 36                                 psha                    ;Guarda un numero diferente de 1 en el stack
203c 12                                 mul
203d 7b 10 01                           stab CANT
2040 20 dd                              bra Loop`
2042 fb 10 01           SaveRES`        addb CANT
2045 86 00                              ldaa #0
2047 18 17                              cba
2049 27 c7              		beq Leer_Cant           ;En caso de que se introduzcan dos 0s
204b 7b 10 01                           stab CANT
204e 3b                                 pshd
204f c6 0a                              ldab #LF
2051 15 e3 ee 86                        jsr [PUTCHAR,X]
2055 cc 10 5d           		ldd #MESS4
2058 15 e3 ee 88                        jsr [PRINTF,X]
205c 1b 82                              leas 2,SP
205e 3d                                 rts
                        
                        
                        ;#################################################################
                        ;               Subrutina Bucar
                        
                        
                        ;#################################################################
                        ;               Subrutina Raiz
                        
                        
                        ;#################################################################
                        ;               Subrutina Print_Result
                        
                        
                        
                                        

Executed: Tue Oct 01 23:54:36 2019
Total cycles: 110, Total bytes: 242
Total errors: 0, Total warnings: 0
